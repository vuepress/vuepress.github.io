import{_ as o,c as t,a as e,b as s,d as l,e as p,w as i,r as c,o as r}from"./app-HXhn31Iy.js";const d={};function u(m,n){const a=c("RouteLink");return r(),t("div",null,[n[3]||(n[3]=e(`<h1 id="内置组件" tabindex="-1"><a class="header-anchor" href="#内置组件"><span>内置组件</span></a></h1><h2 id="autolink" tabindex="-1"><a class="header-anchor" href="#autolink"><span>AutoLink</span></a></h2><ul><li>Props: <ul><li>config <ul><li>类型：<code>AutoLinkConfig</code></li><li>是否必须：<code>true</code></li></ul></li></ul></li></ul><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-ts"><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#4EC9B0;"> AutoLinkConfig</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * 判断该链接是否被激活的模式，优先级高于 \`exact\`</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  activeMatch</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">RegExp</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * \`aria-label\` 属性</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  ariaLabel</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * 该链接是否只有在 URL 完全匹配时才激活</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  exact</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">boolean</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * 自动链接的 URL</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  link</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * \`rel\` 属性</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  rel</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * \`target\` 属性</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  target</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * 自动链接的文本</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  text</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用：</li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-md"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">AutoLink</span><span style="color:#9CDCFE;"> :config</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;autoLinkConfig&quot;</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">AutoLink</span><span style="color:#9CDCFE;"> :config</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;autoLinkConfig&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  default 插槽</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">AutoLink</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">AutoLink</span><span style="color:#9CDCFE;"> :config</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;autoLinkConfig&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">template</span><span style="color:#9CDCFE;"> #before</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">before 插槽</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">template</span><span style="color:#9CDCFE;"> #after</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">after 插槽</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">AutoLink</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">AutoLink</span><span style="color:#9CDCFE;"> :config</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;autoLinkConfig&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">template</span><span style="color:#9CDCFE;"> v-slot</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;config&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">{{ config.text }}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">AutoLink</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">AutoLink</span><span style="color:#9CDCFE;"> :config</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;autoLinkConfig&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">template</span><span style="color:#9CDCFE;"> #before</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;config&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">{{ config.text }}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">AutoLink</span><span style="color:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>该组件将会自动将内部链接渲染为 <code>&lt;RouteLink&gt;</code> ，将外部链接渲染为 <code>&lt;a&gt;</code> ，并添加必要的属性。</p><p>你可以通过 <code>before</code> 和 <code>after</code> 插槽，在文本之前和之后渲染内容。也可以通过 <code>default</code> 插槽，直接渲染文本（默认文本是 <code>config.text</code>）。</p><p>该组件主要是为了开发主题时使用，普通用户在绝大多数情况下并不会用到它。对于主题作者来说，我们建议你在不确定链接是内部链接还是外部链接时，尽量使用这个组件。</p></li></ul><h2 id="clientonly" tabindex="-1"><a class="header-anchor" href="#clientonly"><span>ClientOnly</span></a></h2><ul><li>使用：</li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-md"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">ClientOnly</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">NonSsrFriendlyComponent</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">ClientOnly</span><span style="color:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>该组件和它的子元素只会在客户端被渲染。也就是说，它不会在构建 (SSR) 过程中被渲染到 HTML 内。</p><p>如果一个组件在 <code>setup()</code> 中直接使用 浏览器 / DOM API ，它会导致构建过程报错，因为这些 API 在 Node.js 的环境中是无法使用的。在这种情况下，你可以选择一种方式：</p><ul><li>修改这个组件，只在 <code>onBeforeMount()</code> 或 <code>onMounted()</code> Hook 中使用 浏览器 / DOM API 。</li><li>使用 <code>&lt;ClientOnly&gt;</code> 包裹这个组件。</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>从 Vue 3.5 开始，如果你只是想避免 Hydration Mismatch ，可以尝试使用新的 <a href="https://blog.vuejs.org/posts/vue-3-5#data-allow-mismatch" target="_blank" rel="noopener noreferrer">data-allow-mismatch</a> 属性来代替 <code>&lt;ClientOnly&gt;</code> 组件。</p></div><h2 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>Content</span></a></h2><ul><li><p>Props:</p><ul><li>path <ul><li>类型： <code>string</code></li><li>是否必须： <code>false</code></li></ul></li></ul></li><li><p>使用：</p></li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-md"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">Content</span><span style="color:#9CDCFE;"> path</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/path/to/page.md&quot;</span><span style="color:#808080;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,15)),s("ul",null,[n[2]||(n[2]=s("li",null,[s("p",null,"详情："),s("p",null,"该组件会渲染页面的 Markdown 内容。"),s("p",null,[l("如果没有传入 "),s("code",null,"path"),l(" Prop ，它会渲染当前路由下的页面内容。")]),s("p",null,"该组件主要是为了开发主题时使用。在绝大多数情况下你不会用到它。")],-1)),s("li",null,[n[1]||(n[1]=s("p",null,"参考：",-1)),s("ul",null,[s("li",null,[p(a,{to:"/zh/reference/node-api.html#path"},{default:i(()=>n[0]||(n[0]=[l("Node API > Page 属性 > path",-1)])),_:1,__:[0]})])])])]),n[4]||(n[4]=e(`<h2 id="routelink" tabindex="-1"><a class="header-anchor" href="#routelink"><span>RouteLink</span></a></h2><ul><li><p>Props:</p><ul><li>to <ul><li>类型： <code>string</code></li><li>是否必须： <code>true</code></li></ul></li><li>active <ul><li>类型： <code>boolean</code></li><li>是否必须： <code>false</code></li><li>默认值： <code>false</code></li></ul></li><li>activeClass <ul><li>类型： <code>string</code></li><li>是否必须： <code>false</code></li><li>默认值： <code>&#39;route-link-active&#39;</code></li></ul></li></ul></li><li><p>使用：</p></li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-md"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">RouteLink</span><span style="color:#9CDCFE;"> to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/path/to/target-page.md&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">目标页面</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">RouteLink</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">RouteLink</span><span style="color:#9CDCFE;"> active</span><span style="color:#9CDCFE;"> to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/path/to/current-page.md&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">当前页面</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">RouteLink</span><span style="color:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>该组件会渲染一个链接，用于跳转到指定页面。</p><p>如果 <code>active</code> Prop 被设置为 <code>true</code> ，那么这个链接会被额外添加一个 <code>activeClass</code> 类名。需要注意的是，这里的 active 状态并不会根据当前路由自动更新。</p><p>该组件主要是为了开发主题时使用，普通用户在绝大多数情况下并不会用到它。对于主题作者来说，我们建议你在渲染内部链接时尽量使用这个组件，而不是使用 <code>vue-router</code> 的 <code>&lt;RouterLink&gt;</code> 组件。</p></li></ul>`,4))])}const v=o(d,[["render",u]]),D=JSON.parse('{"path":"/zh/reference/components.html","title":"内置组件","lang":"zh-CN","frontmatter":{"description":"内置组件 AutoLink Props: config 类型：AutoLinkConfig 是否必须：true 使用： 详情： 该组件将会自动将内部链接渲染为 <RouteLink> ，将外部链接渲染为 <a> ，并添加必要的属性。 你可以通过 before 和 after 插槽，在文本之前和之后渲染内容。也可以通过 default 插槽，直接渲染文本...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内置组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-06T06:24:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://vuepress.vuejs.org/zh/reference/components.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"内置组件"}],["meta",{"property":"og:description","content":"内置组件 AutoLink Props: config 类型：AutoLinkConfig 是否必须：true 使用： 详情： 该组件将会自动将内部链接渲染为 <RouteLink> ，将外部链接渲染为 <a> ，并添加必要的属性。 你可以通过 before 和 after 插槽，在文本之前和之后渲染内容。也可以通过 default 插槽，直接渲染文本..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-08-06T06:24:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-06T06:24:18.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress.vuejs.org/reference/components.html"}]]},"git":{"updatedTime":1754461458000,"contributors":[{"name":"meteorlxy","username":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":7,"url":"https://github.com/meteorlxy"},{"name":"Mr.Hope","username":"","email":"mister-hope@outlook.com","commits":1},{"name":"Xinyu Liu","username":"","email":"meteor.lxy@foxmail.com","commits":1},{"name":"张怀文","username":"","email":"mister-hope@outlook.com","commits":1}],"changelog":[{"hash":"9883d65a35122f73ba019bbeb01fd679d3bdb486","time":1754461458000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"style: fix lint and format errors"},{"hash":"b138d6247cdc790783f0a8e6f839e4ecad35d8df","time":1725377519000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"docs: add tip for data-allow-mismatch attribute"},{"hash":"c50d39999bf77e769c24d46e37d3780fe48e621b","time":1725091193000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"style: fix lint errors"},{"hash":"5f57b6cc8de208b75155624ae085f3412c6be364","time":1715863566000,"email":"mister-hope@outlook.com","author":"张怀文","message":"docs: add AutoLink component reference (#24)","coAuthors":[{"name":"meteorlxy","email":"meteor.lxy@foxmail.com"}]},{"hash":"da95c8371e8b538d03aa20f53c472fc329929e97","time":1707234403000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"docs: remove npm badges from core references"},{"hash":"9761a9b949c48d21fcc1bd73d96c103e73d03344","time":1707115253000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"docs: update built-in components reference"},{"hash":"7c7989891cb87959d90c82ce18c7a5bb650ee46b","time":1702213846000,"email":"mister-hope@outlook.com","author":"Mr.Hope","message":"build: set up lint and format scripts (#4)","coAuthors":[{"name":"Xinyu Liu","email":"meteor.lxy@foxmail.com"}]},{"hash":"4b4cfcd626bc3920c689cf7ac85e2706700cc928","time":1701614677000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"build: migrate docs into a separate repo"}]},"autoDesc":true,"filePathRelative":"zh/reference/components.md"}');export{v as comp,D as data};
