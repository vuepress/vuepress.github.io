import{_ as p,c as r,b as n,a as t,d as e,e as a,w as o,r as i,o as d}from"./app-HXhn31Iy.js";const u={},m={class:"hint-container tip"};function c(D,s){const l=i("RouteLink");return d(),r("div",null,[s[28]||(s[28]=n("h1",{id:"开发插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开发插件"},[n("span",null,"开发插件")])],-1)),n("div",m,[s[3]||(s[3]=n("p",{class:"hint-container-title"},"提示",-1)),n("p",null,[s[1]||(s[1]=e("在阅读该指南之前，你最好先了解一下 VuePress 的 ",-1)),a(l,{to:"/zh/advanced/architecture.html"},{default:o(()=>s[0]||(s[0]=[e("架构",-1)])),_:1,__:[0]}),s[2]||(s[2]=e(" 。",-1))])]),s[29]||(s[29]=n("h2",{id:"创建一个插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建一个插件"},[n("span",null,"创建一个插件")])],-1)),n("p",null,[s[5]||(s[5]=e("插件是一个符合 ",-1)),a(l,{to:"/zh/reference/plugin-api.html"},{default:o(()=>s[4]||(s[4]=[e("插件 API",-1)])),_:1,__:[4]}),s[6]||(s[6]=e(" 的普通 JavaScript 对象，称之为 ",-1)),s[7]||(s[7]=n("em",null,"插件对象",-1)),s[8]||(s[8]=e(" ：",-1))]),s[30]||(s[30]=t(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-ts"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> fooPlugin</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;vuepress-plugin-foo&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),n("p",null,[s[10]||(s[10]=e("插件还可以是一个接收 ",-1)),a(l,{to:"/zh/reference/node-api.html#app"},{default:o(()=>s[9]||(s[9]=[e("App 实例",-1)])),_:1,__:[9]}),s[11]||(s[11]=e(" 作为参数，且返回值为 ",-1)),s[12]||(s[12]=n("em",null,"插件对象",-1)),s[13]||(s[13]=e(" 的函数，称之为 ",-1)),s[14]||(s[14]=n("em",null,"插件函数",-1)),s[15]||(s[15]=e(" ：",-1))]),s[31]||(s[31]=t(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-ts"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> barPlugin</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;vuepress-plugin-bar&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 <em>插件对象</em> 或者 <em>插件函数</em> 作为返回值。于是，你的插件应该转换成这样的形式：</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-ts"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> fooPlugin</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;vuepress-plugin-foo&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> barPlugin</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;vuepress-plugin-bar&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布到-npm" tabindex="-1"><a class="header-anchor" href="#发布到-npm"><span>发布到 NPM</span></a></h2><p>在创建了插件之后，你需要在 <a href="https://docs.npmjs.com/cli/v8/configuring-npm/package-json" target="_blank" rel="noopener noreferrer">package.json</a> 文件中遵循一定的约定，然后再将其发布到 NPM 上：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code class="language-json"><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">  &quot;name&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;vuepress-plugin-foo&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">  &quot;keywords&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&quot;vuepress-plugin&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),n("ul",null,[n("li",null,[s[17]||(s[17]=e("将 ",-1)),s[18]||(s[18]=n("code",null,"name",-1)),s[19]||(s[19]=e(" 按照约定命名，即 ",-1)),s[20]||(s[20]=n("code",null,"vuepress-plugin-xxx",-1)),s[21]||(s[21]=e(" 或 ",-1)),s[22]||(s[22]=n("code",null,"@org/vuepress-plugin-xxx",-1)),s[23]||(s[23]=e(" ，它应该和 ",-1)),s[24]||(s[24]=n("em",null,"插件对象",-1)),s[25]||(s[25]=e(" 的 ",-1)),a(l,{to:"/zh/reference/plugin-api.html#name"},{default:o(()=>s[16]||(s[16]=[e("name",-1)])),_:1,__:[16]}),s[26]||(s[26]=e(" 字段保持一致。",-1))]),s[27]||(s[27]=n("li",null,[e("在 "),n("code",null,"keywords"),e(" 中包含 "),n("code",null,"vuepress-plugin"),e(" ，这样用户可以在 NPM 上搜索到你的插件。")],-1))])])}const v=p(u,[["render",c]]),g=JSON.parse('{"path":"/zh/advanced/plugin.html","title":"开发插件","lang":"zh-CN","frontmatter":{"description":"开发插件 提示 在阅读该指南之前，你最好先了解一下 VuePress 的 。 创建一个插件 插件是一个符合 的普通 JavaScript 对象，称之为 插件对象 ： 插件还可以是一个接收 作为参数，且返回值为 插件对象 的函数，称之为 插件函数 ： 插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 插件对象 或者 插件...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发插件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-31T07:59:53.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://vuepress.vuejs.org/zh/advanced/plugin.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"开发插件"}],["meta",{"property":"og:description","content":"开发插件 提示 在阅读该指南之前，你最好先了解一下 VuePress 的 。 创建一个插件 插件是一个符合 的普通 JavaScript 对象，称之为 插件对象 ： 插件还可以是一个接收 作为参数，且返回值为 插件对象 的函数，称之为 插件函数 ： 插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 插件对象 或者 插件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-31T07:59:53.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-31T07:59:53.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress.vuejs.org/advanced/plugin.html"}]]},"git":{"updatedTime":1725091193000,"contributors":[{"name":"meteorlxy","username":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":2,"url":"https://github.com/meteorlxy"},{"name":"Mr.Hope","username":"","email":"mister-hope@outlook.com","commits":1},{"name":"Xinyu Liu","username":"","email":"meteor.lxy@foxmail.com","commits":1}],"changelog":[{"hash":"c50d39999bf77e769c24d46e37d3780fe48e621b","time":1725091193000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"style: fix lint errors"},{"hash":"7c7989891cb87959d90c82ce18c7a5bb650ee46b","time":1702213846000,"email":"mister-hope@outlook.com","author":"Mr.Hope","message":"build: set up lint and format scripts (#4)","coAuthors":[{"name":"Xinyu Liu","email":"meteor.lxy@foxmail.com"}]},{"hash":"4b4cfcd626bc3920c689cf7ac85e2706700cc928","time":1701614677000,"email":"meteor.lxy@foxmail.com","author":"meteorlxy","message":"build: migrate docs into a separate repo"}]},"autoDesc":true,"filePathRelative":"zh/advanced/plugin.md"}');export{v as comp,g as data};
